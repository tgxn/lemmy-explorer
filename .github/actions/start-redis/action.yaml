name: start-redis
description: Fetches the Redis dump from S3, caches it, and starts a Redis instance using Docker Compose.

runs:
  using: "composite"
  steps:
    - name: get current hour for cache busting
      id: cache-hour
      shell: bash
      run: echo "hour=$(date +'%Y-%m-%d-%H')" >>$GITHUB_OUTPUT

    - name: Cache Redis Dump
      id: cache-redis
      uses: actions/cache@v4
      env:
        cache-name: cache-redis
      with:
        path: ./.redis/dump.rdb
        key: cache-redis-${{ steps.cache-hour.outputs.hour }}

    # download redis db dump from s3
    - name: Download the Redis Dump
      if: steps.cache-redis.outputs.cache-hit != 'true'
      uses: keithweaver/aws-s3-github-action@v1.0.0
      with:
        command: cp
        source: s3://${{ vars.BUILD_S3_BUCKET }}/checkpoint/dump.rdb
        destination: ./.redis/dump.rdb
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ap-southeast-2

    # set compose_command envvar
    - name: set global workflow ennvvar
      shell: bash
      run: echo "COMPOSE_COMMAND=docker compose -f docker-compose.github.yaml" >> $GITHUB_ENV

    # start redis & check if it is running
    - name: Start Redis
      working-directory: ./crawler
      shell: bash
      run: ${{ env.COMPOSE_COMMAND }} up -d redis

    - name: Wait for Redis to be ready
      working-directory: ./crawler
      shell: bash
      run: |
        until ${{ env.COMPOSE_COMMAND }} exec redis redis-cli ping | grep PONG; do
          echo "Waiting for Redis..."
          sleep 1
        done

    - working-directory: ./crawler
      shell: bash
      run: docker ps -a
    - working-directory: ./crawler
      shell: bash
      run: ${{ env.COMPOSE_COMMAND }} logs redis
